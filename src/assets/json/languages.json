{
    "Java":{
        "name":"Java",
        "intro":"Java es un lenguaje basado en clases y orientado a objetos desarrollado por la empresa Sun Mycrosystems, y actualmente mantenido por Oracle Corporation. Creado en 1995 por James Gosling, es un lenguaje tipado con una sintaxis basada en C/C++; el cual es actualmente utilizado en miles de millones de dispositivos en el mundo; en donde se destaca el uso de encapsulacion, polimorfismo y herencia. Se utiliza para aplicaciones web, de escritorio o incluso mobile a traves del Android SDK y su lenguaje derivado, Kotlin.",
        "masInfo":["https://www.oracle.com/java/","https://en.wikipedia.org/wiki/Java_(programming_language)"],
        "sintaxis":{
            "masInfo":["https://docs.oracle.com/javase/8/docs/technotes/guides/language/index.html","https://www.w3schools.com/java/default.asp"],
            "comentarios":"Los comentarios en Java pueden escribirse de varias maneras: ",
            "tiposComentarios":["'//' para comentarios de una sola linea.", "'/* */' para comentarios multilinea.", "'/** */' para comentarios multilinea de Documentacion."],
            "ejemplosComentarios":["//Comentario numero 1", "/* Comentario \nnumero 2 */", "/** Comentario \nnumero 3 */"],
            "convenciones":"Los identificadores suelen utilizar CamelCase como estilo de escritura.",
            "ejemploConvenciones":["nombreUsuario"],
            "tipos":"En Java hay 8 tipos de datos tiposEjemplos, ademas del tipo String, el cual no es precisamente primitivo, pero es igual de importante en su uso:",
            "tiposEjemplos":["byte","short","int","long","float","double","boolean","char", "String"],
            "declaraciones":"Las declaraciones en Java deben llevar un ';' al final de la linea. Luego de la declaracion de una clase, el ';' no es obligatorio",
            "variables":"Al ser un lenguaje tipado, las variables deben ser declaradas con su tipo correspondiente. Varias variables pueden ser declaradas a la vez para un mismo tipo.",
            "ejemplosVariables":["int edad;", "boolean esHombre, esMujer;"],
            "modificadoresAccess":"Los modificadores de accesibilidad permiten una encapsulacion mayor en el codigo. Los tipos de modificadores son los siguientes:",
            "ejemplosModAccess":["public","protected","private"],
            "modificadoresOtros":"Hay otros modificadores que no afectan la accesiblidad, pero ofrecen otras funcionalidades",
            "ejemplosModOtros":["final","abstract","static","transient","volatile","synchronized"],
            "arrays":"Los arrays en Java se identifican con un '[ ]' luego del tipo de la variable. En el caso de arrays multidimensionales, simplemente se ponen los [ ] necesarios",
            "ejemplosArrays":["String[] nombres = {'George','Lucas'};", "int[][] numeros = {{1,2,3},{4,5}};"],
            "operadores":"Hay diferentes tipos de operadores en Java:",
            "operadoresTipos":["Aritmeticos","Asignacion","Comparacion","Logicos"],
            "ejemplosOperadores":["+, -, *, /, %, ++, --","=, +=, -=, *=, /=, %=, &=, |=, ^=, >>=, <<=", "==, !==, >, <, >=, <=","&&, ||, !"],
            "ifelse":"Al igual que en la mayoria de los lenguajes, la declaracion de un bloque If/Else se da de la siguiente forma:",
            "ejemploIfelse":"if(condicion){\n //Bloque de codigo condicion True\n}else{\n //Bloque de codigo condicion false\n}",
            "ifelseotros":"Ademas, permite utilizar 'else if' para testear mas de una condicion. Tambien pueden utilizarse la operacion ternaria (una version resumida de un if/else):",
            "ejemploIfelseOtro":"variable = (condicion) ? expresion true : expresion false;",
            "forloop":"Al igual que en la mayoria de los lenguajes, la declaracion de un loop For se da de la siguiente forma:",
            "defFor":"for(statement antes del codigo; condicion de ejecucion; ejecucion en cada vuelta){\n //Bloque de codigo\n}",
            "ejemploFor":"for(int i=0; i<10; i++){\n  System.out.println(i)\n}",
            "while":"Al igual que en la mayoria de los lenguajes, la declaracion de un While se da de la siguiente forma:",
            "ejemploWhile":"int i = 0;\nwhile(i<10){\n  System.out.println(i);\n  i++;\n}",
            "breakcontinue":"El uso de break y continue sirve para salir o saltar una iteracion/loop.",
            "ejemploBreak":"for(i=0; i<10; i++){\n  if(i==5){\n    continue; //Saltea esta iteracion\n  }\n  if(i==7){\n    break; //Sale del loop;\n  }\n  System.out.println(i);\n}"
        },
        "herramientas":{
            "frameworks":[{"name":"Spring Framework","url":"https://spring.io/"},{"name":"Apache Struts","url":"https://struts.apache.org/"},{"name":"Grails","url":"https://grails.org/"},{"name":"Hibernate","url":"https://hibernate.org/"},{"name":"JSF","url":"http://www.javaserverfaces.org/"}],
            "ides":[{"name":"Eclipse","url":"https://www.eclipse.org/downloads/packages/"},{"name":"IntelliJ","url":"https://www.jetbrains.com/es-es/idea/"},{"name":"NetBeans","url":"https://netbeans.apache.org/download/index.html"},{"name":"VisualCode","url":"https://code.visualstudio.com/"}],
            "otherDownloads":[{"name":"Java Plataform","url":"https://www.oracle.com/technetwork/es/java/javase/downloads/index.html"},{"name":"JDK","url":"https://www.oracle.com/ar/java/technologies/javase/javase-jdk8-downloads.html"}],
            "otherActions":[{"name":"Creacion de PATH (Windows)","url":"https://confluence.atlassian.com/doc/setting-the-java_home-variable-in-windows-8895.html"}]
        }
    },
    "Python":{
        "name":"Python",
        "intro":"Python es un lenguaje interpretado de alto nivel, administrado por la empresa Python Software Foundation. Creado a finales de los aÃ±os ochenta y publicado en 1991 por Guido van Rossum, Python es un robusto lenguaje multi-paradigma que soporta parcialmente la programacion orientada a objetos, la programacion procedural y la programacion funcional. Su filosofia se centra en la legibilidad del codigo escrito utilizando una delimitacion por identacion.",
        "masInfo":["https://www.python.org/","https://en.wikipedia.org/wiki/Python_(programming_language)"],
        "sintaxis":{
            "masInfo":["https://www.python.org/doc/","https://www.w3schools.com/python/"],
            "comentarios":"Los comentarios en Python comienzan con el caracter #. No tiene asignado ningun caracter para comentarios multilinea.",
            "tiposComentarios":["# Para comentarios inline","# Tambien se utiliza en multilinea"],
            "ejemplosComentarios":["print('Hello World') #Esto es un comentario","#Esto es un comentario\n#multilinea\nprint('Hello World')"],
            "convenciones":"Los identificadores deben empezar con letras o con guion bajo (no pueden empezar con un numero). Ademas, es case-sensitive, por lo que variables como 'edad' y 'Edad' son diferentes. Por ultimo, las variables de varias palabras puede realizarse usando CamelCase (todas las palabras empiezan con mayuscula excepto la primera), PascalCase (todas las palabras empiezan con mayuscula) o SnakeCase (todas las palabras empiezan con minuscula y se separan con un guion bajon). Ademas, la identacion es extremadamente importante en la declaracion de funciones ya que es el delimitador de bloque. Se debe tener en cuenta esto al escribir el codigo.",
            "ejemploConvenciones":["namePerson = 'Logan' #CamelCase - Valido","NamePerson = 'Charles' #PascalCase - Valido","name_person = 'Erik' #SnakeCase - Valido", "name-person = 'Ororo' #NO VALIDO", "name person = 'Hank' #NO VALIDO","def funcion_mutante():\n    print('Hello World')"],
            "tipos":"En Python podemos encontrar 6 tipos tiposEjemplos, ademas de varios tipos de datos (diferenciados facilmente por su escritura).",
            "tiposEjemplos":["Integer","Long","Float","String","Boolean","None","str","int, float, complex","list, tuple, range","dict","set, frozenset","bool","bytes, bytearray, memoryview"],
            "declaraciones":"La declaracion de funciones se realiza con la palabra reservada 'def' (recordar el uso de identacion requerido).",
            "variables":"La asignacion de variables se hace de forma directa y sin necesidad de explicitar el tipo de la misma. En algunos casos es posible realizar un casteo de tipo, como se muestra en los ejemplos. Tambien se puede realizar multiples asignaciones al mismo tiempo.",
            "ejemplosVariables":["x = 5","y = 'Kurt'   #tipo str\ny = 5        #ahora es tipo int","z = str(3)   #z sera '3'\np = int(1.6) #p valdra 1","a,b,c = 'Angel','Bishop','Cannonball'"],
            "modificadoresAccess":"",
            "ejemplosModAccess":[""],
            "modificadoresOtros":"",
            "ejemplosModOtros":[""],
            "arrays":"Pyhton no cuenta con soporte especifo en arrays, pero utiliza algo similar llamados listas; los cuales se identifican entre [ ].",
            "ejemplosArrays":["xmen = ['Professor X','Wolverine','Cyclops']"],
            "operadores":"Python cuenta con diferentes tipos de operadores:",
            "operadoresTipos":["Aritmeticos","Asignacion","Comparacion","Logicos","Identidad","Pertenencia","Bitwise"],
            "ejemplosOperadores":["+, -, *, /, %, **, //","=, +=, -=, *=, /=, %=, //=, **=, &=, |=, ^=, >>=, <<=","==, !=, >, <, >=, <=","and, or, not","is, is not","in, not in","&, |, ^, ~, <<, >>"],
            "ifelse":"La declaracion de un bloque 'if' se da de igual forma que una funcion (se debe recordar la identacion). Tambien se puede utilizar 'elif' para testear diferentes condiciones:",
            "ejemploIfelse":"if x > y:\n    print('x es mayor')\nelif x == y:\n    print('x e y son iguales')\nelse:\n    print('y es mayor')",
            "ifelseotros":"Tambien se pueden utilizar expresiones ternarias:",
            "ejemploIfelseOtro":"print('x es mayor') if x > y else print('x e y son iguales') if x == y else print('y es mayor')",
            "forloop":"La declaracion de un loop 'for' en Python es bastante mas sencilla que en otros lenguajes; y podemos iterar sobre listas, tuplas, rangos e incluso, strings.",
            "defFor":"",
            "ejemploFor":"mutantes = ['Storm','Beast','Jean Grey']\nfor m in mutantes:\n    print(m)",
            "while":"La declaracion de un loop 'while' se da de la siguiente forma:",
            "ejemploWhile":"x = 1\nwhile x < 10:\n    print(x)\n    x += 1",
            "breakcontinue":"El uso de break y continue sirve para salir o saltar una iteracion/loop.",
            "ejemploBreak":"x = 1\nwhile x < 10\n    if x == 5:\n        continue\n    print(x)\n    if x == 9:\n        break\n    x += 1"
        },
        "herramientas":{
            "frameworks":[{"name":"CubicWeb","url":"https://www.cubicweb.org/"},{"name":"Django","url":"https://www.djangoproject.com/"},{"name":"Flask","url":"https://flask.palletsprojects.com/en/1.1.x/"},{"name":"Bottle","url":"https://bottlepy.org/docs/dev/"}],
            "ides":[{"name":"Eclipse","url":"https://www.eclipse.org/downloads/packages/"},{"name":"PyCharm","url":"https://www.jetbrains.com/es-es/pycharm/"},{"name":"Vim","url":"https://www.vim.org/"},{"name":"VisualCode","url":"https://code.visualstudio.com/"}],
            "otherDownloads":[{"name":"Pyhton","url":"https://www.python.org/downloads/"}],
            "otherActions":[{"name":"Creacion de PATH (Windows)","url":"https://www.educative.io/edpresso/how-to-add-python-to-path-variable-in-windows"},{"name":"Instalacion de PIP (Package Manager)","url":"https://pip.pypa.io/en/stable/installing/"},{"name":"Instalacion VirtualEnv","url":"https://virtualenv.pypa.io/en/latest/installation.html"}]
        }
    },
    "Ruby":{
        "name":"Ruby",
        "intro":"Ruby es un lenguaje dinamico orientado a objetos y de codigo abierto, creado y publicado en 1995 por Yukihiro Matsumoto. Incorporando la programacion funcional y la procedural, Ruby mezcla aspectos de Pyhton, Perl, Smalltalk y Lisp, entre otros; donde todo en el codigo es considerado un objeto. Su alta flexibilidad, permiten al programador modificar las partes esenciales del lenguaje, redefiniendolas o incluso quitandolas.",
        "masInfo":["https://www.ruby-lang.org/es/","https://en.wikipedia.org/wiki/Ruby_(programming_language)"],
        "sintaxis":{
            "masInfo":["https://www.ruby-lang.org/es/documentation/","https://www.tutorialspoint.com/ruby/ruby_syntax.htm"],
            "comentarios":"Para escribir comentarios inline, Ruby utiliza el caracter '#' al igual que en Python. Sin embargo, a diferencia de este, es posible escribir comentarios multilinea utilizando '=begin' y '=end' como indica el ejemplo.",
            "tiposComentarios":["Inline", "Multilinea"],
            "ejemplosComentarios":["puts 'Hello There' #Esto es un comentario inline","=begin\nEsto es un comentario\nmultilinea\n=end\n\nputs 'Hello There'"],
            "convenciones":"Ruby cuenta con varias convenciones, las cuales listaremos a modo de ejemplos a continuacion. El ';' no es necesario al final de la linea. Los espacios/tabulaciones son usualmente ignorados (excepto en strings) exceptuando en algunos casos excepcionales. Ademas, es CaseSensitive, por lo que variables como 'edad' y 'Edad' son diferentes. Se pueden ademas utilizar los bloques de codigo 'BEGIN' y 'END' para explicitar ejecuciones antes y despues del codigo principal. Los delimitadores de bloque usualmente se definen mediante un keyword ('class' - Clases, 'def' - Funciones) para el inicio, y otro para el final ('end').",
            "ejemploConvenciones":["puts 'Hello There';   #El ';' esta puesto pero no es obligatorio","a + b != a  +b        #Diferenciacion de espacios/tabulaciones en casos especificos.", "puts 'Hello There'\n\nBEGIN {\n  puts 'init'\n}\n\nEND {\n  puts 'fin'\n}\n\n#Resultado Final:\ninit\nHello There\nfin"],
            "tipos":"Ruby presenta algunos tipos diferentes al resto de los lenguajes. Estos son:",
            "tiposEjemplos":["Number","String","Boolean","Hash (diccionarios donde el metodo de asignacion es mediante el simbolo '=>')","Array","Symbol (precedidos por un ':', son strings que ocupan menos cantidad de memoria y son mas eficientes)"],
            "declaraciones":"Las declaraciones de clase se realizan mediante el keyword 'class' y finalizan con el keyword 'end'. En el caso de las funciones es lo mismo, pero el keyword de inicializacion es 'def'.",
            "variables":"Hay diferentes clases de variables en Ruby, y cada una se escribe de forma diferente. Las variables globales comienzan con el simbolo '$', aunque no suelen ser recomendado su uso. Las variables de instancia comienzan con el caracter '@' y su scope estara reducido a la instancia de la clase. Las variables de clase comienzan con '@@' y estaran definidos para todas las instancias de dicha clase. Las variables locales inician con minuscula o con un guion bajo, y su scope dependera de donde esten inicializadas. Por ultimo, las constantes se suelen escribir en mayusculas, y su scope estara delimitado segun donde esten definidas.",
            "ejemplosVariables":["$global_var = 'Luke'    #Variable global","@instance_var = 'Leia'  #Variable de instancia","@@class_var = 'Han'     #Variable de clase", "_local_var = 'C3PO'     #Variable local","CONST_VAR = 'R2D2'      #Variable constante"],
            "modificadoresAccess":"",
            "ejemplosModAccess":[""],
            "modificadoresOtros":"",
            "ejemplosModOtros":[""],
            "arrays":"La definicion de arrays en Ruby es bastante sencilla, como se muestra en el ejemplo; en donde podes especificar el largo del array o los datos que tendra en su inicializacion. Ademas de estos, Ruby cuenta con Hashes (diccionarios) como tipo base, por lo cual son bastante usados.",
            "ejemplosArrays":["jedi = Array.new","jedi = Array.new(3)","jedi = Array['Yoda','Mace Windu','Obi Wan Kenobi']","sith = Hash.new","sith = Hash['master' => 'Darth Sidious', 'apprentice' => 'Count Dooku']"],
            "operadores":"Ruby cuenta con diferentes tipos de operadores",
            "operadoresTipos":["Aritmeticos","Comparacion","Asignacion", "Bitwise", "Logicos", "Rango","defined?"],
            "ejemplosOperadores":["+, -, *, /, %, **","==, !=, >, <, >=, <=, <=>, ===, .eql?, equal?","=, +=, -=, *=, /=, %=, **=","&, |, ^, ~, <<, >>", "and, or, &&, ||, !, not", ".. ...", "operador de definicion de variables/metodos (retorna un string de la expresion o 'nil' si no esta definido)"],
            "ifelse":"La definicion de un statement 'if' en Ruby se da de forma similar a Pyhton:",
            "ejemploIfelse":"if x < 20\n  puts 'x es menor'\nelsif x == 10\n  puts 'x es 10'\nelse\n  puts 'x es mayor'\nend",
            "ifelseotros":"Otra expresion es 'unless', la cual funciona a la inversa del 'if' (al menos que se de la condicion, se ejecuta el codigo). Ambos casos ('if' y 'unless') pueden ser utilizados como modificador al final de un statement:",
            "ejemploIfelseOtro":"print 'Alderaan exploded' unless x == 10",
            "forloop":"La declaracion de un loop 'for' se da de forma similar a otros lenguajes. Sin embargo, tiene un equivalente que se podria clasificar como un for-each",
            "defFor":"for i in 0..5\n  puts 'Valor #{i}\nend",
            "ejemploFor":"(0..5).each do |i|\n  puts 'Valor #{i}'\nend",
            "while":"El caso del loop 'while' es similar, con una minima diferencia (se debe agregar un 'do')",
            "ejemploWhile":"while x < 10 do\n  puts 'Valor #{x}'\n  x += 1\nend",
            "breakcontinue":"El funcionamiento de break es el mismo que en otros lenguajes. En el caso del continue, en Ruby es llamado 'next'. Tambien hay otros modificadores como 'redo' y 'retry' que permiten repetir una iteracion si se cumple cierta condicion.",
            "ejemploBreak":"for i in 0..10\n  i += 1\n  puts 'Valor #{i}'\n  if i == 4 then\n    puts 'Llegue al 4. Va de nuevo'\n    redo\n  end\n  retry if i == 9\nend"
        },
        "herramientas":{
            "frameworks":[{"name":"Ruby on Rails","url":"https://rubyonrails.org/"},{"name":"Sinatra","url":"http://sinatrarb.com/"},{"name":"Hanami","url":"https://hanamirb.org/"},{"name":"Grape","url":"https://github.com/ruby-grape/grape"}],
            "ides":[{"name":"Aptana Studio","url":"http://www.aptana.com/"},{"name":"RubyMine","url":"https://www.jetbrains.com/es-es/ruby/"},{"name":"NetBeans","url":"https://netbeans.org/"}],
            "otherDownloads":[{"name":"Ruby + DevKit","url":"https://www.ruby-lang.org/es/documentation/installation/#installers"},{"name":"Manejadores","url":"https://www.ruby-lang.org/es/documentation/installation/#managers"}],
            "otherActions":[{"name":"MSYS2 (opc)","url":"https://www.msys2.org/"}]
        }
    },
    "C#":{
        "name":"C#",
        "intro":"C# es un lenguaje tipado multiparadigma desarollado y mantenido por la empresa Microsoft. Creado en el aÃ±o 2000, se convirtio en el lenguje standard de .NET (Framework creado tambien por Microsoft). Su sintaxis basica deriva de los lenguajes C/C++; con algunos detalles orientados a objetos similares a los de Java. Se ha utilizado para realizar aplicaciones de escritorio, mobile o incluso videojuegos; bajo la plataforma de Unity.",
        "masInfo":["https://docs.microsoft.com/en-us/dotnet/csharp/tour-of-csharp/","https://en.wikipedia.org/wiki/C_Sharp_(programming_language)"],
        "sintaxis":{
            "masInfo":["https://docs.microsoft.com/en-us/dotnet/csharp/tutorials/","https://www.w3schools.com/cs/default.asp"],
            "comentarios":"Los comentarios en C# se escriben de la siguiente forma: Inline con '//' y multilinea con '/* */'",
            "tiposComentarios":["Inline","Multilinea"],
            "ejemplosComentarios":["Console.WriteLine(\"Hello World\"); //Esto es un comentario inline","/* Esto es un comentario\nmultilinea */\nConsole.WriteLine(\"Hello World\")"],
            "convenciones":["Al ser un lenguaje tipado, en C# es necesario explicitar el tipo de las variables/clases que se definan. Ademas, las lineas deben finalizar con un ';' de forma obligatoria. Se utiliza CamelCase como convencion para la definicion de las mismas; ademas de ser CaseSensitive (por lo que 'edadPersona' y 'edadpersona' son 2 variables diferentes). Pueden definirse diferentes variables del mismo tipo, separadas por coma."],
            "ejemploConvenciones":["int infinityGems = 6;", "string marvelHero = \"Iron Man\", marvelVillain = \"Thanos\";","marvelHero != marvelhero"],
            "tipos":"Hay 5 tipos de datos base en C#; aunque podemos encontrar un par mas ('long' y 'float') dentro del grupo de numeros:",
            "tiposEjemplos":["int","double","char - delimitados por las comillas simples ' '","string - delimitados por las comillas dobles \" \"","bool"],
            "declaraciones":"Las declaraciones son delimitadas por llaves '{}'. Se utiliza el keyword 'class' para la definicion de clases, y el keyword 'namespace' para delimitar secciones de codigo bajo un denominador comun (paquete de clase).",
            "variables":"Las variables se definen mediante un tipo y un nombre de variable. En el caso de que la variable sea una constante, debera ser precedida por el keyword 'const'.",
            "ejemplosVariables":["int numeroUno = 1;","const name = \"Tony\";","char avenger = 'a';"],
            "modificadoresAccess":"C# cuenta con diferentes modificadores de acceso:",
            "ejemplosModAccess":["public","private","protected","internal"],
            "modificadoresOtros":"Ademas cuenta con 2 combinaciones que extienden el acceso a los tipos derivados de la clase que los contiene:",
            "ejemplosModOtros":["protected internal","private protected"],
            "arrays":"Para definir un array en C# es necesario declarar la clase del mismo y seguirlo por corchetes. Tambien se le puede especificar el tamaÃ±o desde su creacion.",
            "ejemplosArrays":["string[] avengers = {\"Iron Man\",\"Thor\",\"Capitan America\",\"Hulk\"};","string[] avengers = new string[4];"],
            "operadores":"Hay diferentes tipos de operados en C#:",
            "operadoresTipos":["Aritmeticos", "Asignacion", "Comparacion", "Logicos"],
            "ejemplosOperadores":["+, -, *, /, %, ++, --", "=, +=, -=, *=, /=, %=, &=, |=, ^=, >>=, <<=","==, !=, >, <, >=, <=", "&&, ||, !"],
            "ifelse":"La declaracion de un 'if' en C# se da de la siguiente forma (los bloques 'else if' y 'else' obviamente son opcionales):",
            "ejemploIfelse":"if(x > y){\n  Console.WriteLine(\"X es mas grande\");\n}else if(x == y){\n  Console.WriteLine(\"X e Y son iguales\");\n}else{\n  Console.WriteLine(\"Y es mas grande\");\n}",
            "ifelseotros":"El bloque 'if' tambien se puede definir de forma ternaria:",
            "ejemploIfelseOtro":"bool xMasGrande = (x > y) ? true : false;",
            "forloop":"La declaracion de un loop 'for' se hace de la siguiente forma:",
            "defFor":"",
            "ejemploFor":"for(int i = 0; i < 10; i++){\n  Console.WriteLine(i);\n}",
            "while":"La declaracion de un loop 'while' se hace de la siguiente manera:",
            "ejemploWhile":"int index = 0;\nwhile(index < 10){\n  Console.WriteLine(index);\n  i++;\n}",
            "breakcontinue":"'break' y 'continue' son dos keyword que se pueden utilizar en los loop de C# para salir o saltear una iteracion",
            "ejemploBreak":"int i = 0;\nwhile(i < 10){\n  i++;\n  if(i == 4){\n    continue;\n  }\n  if(i == 9){\n    break;\n  }\n  Console.WriteLine(i);\n}"
        },
        "herramientas":{
            "frameworks":[{"name":"ASP.NET","url":"https://dotnet.microsoft.com/apps/aspnet"}],
            "ides":[{"name":"VisualStudio","url":"https://visualstudio.microsoft.com/es/vs/community/"},{"name":"Rider","url":"https://www.jetbrains.com/rider/"},{"name":"VisualCode","url":"https://code.visualstudio.com/"},{"name":"Unity (desarrollo de videojuegos)","url":"https://unity.com/es"},{"name":"MonoDevelop","url":"https://www.monodevelop.com/"}],
            "otherDownloads":[{"name":".NET Core SDK","url":"https://dotnet.microsoft.com/download/dotnet-core/2.2"}],
            "otherActions":[{"name":"Instalacion de paquetes en VS","url":"https://www.w3schools.com/cs/cs_getstarted.asp"}]
        }
    }
}